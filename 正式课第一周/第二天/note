1.把本地仓库的内容，推送到远程仓库
    1、创建文件夹，git init变成本地仓库
    2、建立远程仓库，拷贝地址
    3、git remote add origin 地址
    4、git add -A
       git commit -m"注释"
       git push origin master
2.查看链接哪些远程仓库：git remote -v
  添加远程仓库：git remote add 通道名
  删除远程仓库：git remote rm 通道名
3.如何更新项目：
    1）git remote add teacher
    2)git remote update teacher
    3)git pull teacher master
4、如何把自己的代码推送到老师仓库？
    1)fork老师讲义
    2）自己本地连接自己远程：方法2：git clone
    3）本地代码更新完，需要推送到自己远程
        1.git add -A
        2.git commit -m"xx"
        3.git push origin master
    然后通过自己远程pull request到老师远程
5、预解释：
在当前作用域下，在JS代码执行之前，会对带var和带function进行提前声明或定义
6、内存：堆内存和栈内存
栈内存：全局作用域和私有作用域
堆内存：存储引用数据类型
    对象：键值对
    函数：代码字符串
7、带var 和 不带var
全局作用域下，他们都是window的全局属性；带var会进行预解释，不带var不会进行预解释
。。。。。。。。。。。。。。。。。。
1.预解释无节操：
1）只对等号左边带var的，声明不定义
2）已经声明过的不会进行重复声明，但会重新赋值
3）在声明阶段，函数的优先级大于变量
4）自执行函数不会进行预解释，只有执行到他的时候，声明+定义+调用同步完成
5）条件判断语句中，无论条件是否成立，都会进行预解释
    注意：提醒我们不要在条件判断语句中，写函数的定义阶段，因为各大浏览器对条件判断的预解释不同；
6）return后面的语句不会进行预解释，return下面的语句，虽然不执行，但会进行预解释；
2.运算符的优先级：
算术》比较》逻辑》赋值
3.函数返回值出现undefined的情况有两种：
1）没有return
2）写了return但没有赋值；
4.内存及内存释放：
1）内存：堆内存和栈内存；
var ary=[1,3];
堆内存释放：让占用内存地址的变量，指向空指针null;
2)栈内存：全局作用域和私有作用域
全局作用域：在浏览器加载完HTML页面的时候，全局作用域就形成了；
全局作用域销毁：关闭浏览器，关闭当前页面
私有作用域：当函数被调用的时候，会形成私有作用域；
私有作用域的销毁：
    一般情况下，当函数执行完成的时候，默认会进行销毁，有两种特殊情况不销毁：
    1）不销毁：当函数体内有东西被外面的变量或者其他占用的时候，该函数不销毁；
    2）不立即销毁：当函数执行完成的时候，会返回一个函数的定义阶段，这个返回的函数还需要再次调用；只有等所有的函数都调用完成，这个大函数才能销毁；
5.this总结：
1）当元素身上的事件被触发的时候，会执行一个函数，函数中的this，指向当前这个元素；
2）函数被调用的时候，看前面是否有点，点前面是谁，this就是谁；(没点就是window)
3）自执行函数中的this，永远都是window；














